{"version":3,"sources":["helpers.js","main.js"],"names":["randomInteger","min","max","rand","Math","random","floor","getCoords","elem","box","getBoundingClientRect","top","pageYOffset","left","pageXOffset","disableSelection","target","onselectstart","style","MozUserSelect","onmousedown","cursor","field","document","body","querySelector","score","leftGoalsList","rightGoalsList","fieldW","fieldH","gateW","gateH","ballW","scoreValue","right","innerText","balls","minX","maxX","minY","maxY","forEach","el","element","createElement","classList","add","toUpperCase","append","position","backgroundColor","newX","newY","ballList","querySelectorAll","ball","goal","side","addGoalToTheList","newElement","cloneNode","listItem","event","contains","shiftX","clientX","shiftY","clientY","moveAt","pageX","pageY","addEventListener","onMouseMove","onmouseup","offsetWidth","offsetHeight","removeEventListener","e","ondragstart"],"mappings":"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","file":"main.3d961b6a.js","sourceRoot":"..\\src","sourcesContent":["export const randomInteger = (min, max) => {\n  const rand = min + Math.random() * (max - min);\n\n  return Math.floor(rand);\n};\n\nexport const getCoords = (elem) => {\n  const box = elem.getBoundingClientRect();\n\n  return {\n    // eslint-disable-next-line no-undef\n    top: box.top + pageYOffset,\n    // eslint-disable-next-line no-undef\n    left: box.left + pageXOffset,\n  };\n};\n\nexport const disableSelection = (target) => {\n  if (typeof target.onselectstart !== 'undefined') {\n    target.onselectstart = function() {\n      return false;\n    };\n  } else {\n    if (typeof target.style.MozUserSelect !== 'undefined') {\n      target.style.MozUserSelect = 'none';\n    } else {\n      target.onmousedown = function() {\n        return false;\n      };\n      target.style.cursor = 'default';\n    }\n  }\n};\n","import { randomInteger, getCoords, disableSelection } from './helpers';\n\nconst field = document.body.querySelector('.field');\nconst score = document.querySelector('.score__value');\nconst leftGoalsList = document.querySelector('.info__goal--left .info__list');\nconst rightGoalsList = document.querySelector('.info__goal--right .info__list');\nconst fieldW = 1200;\nconst fieldH = 640;\nconst gateW = 150;\nconst gateH = 382;\nconst ballW = 42;\n\nconst scoreValue = {\n  left: 0,\n  right: 0,\n};\n\nscore.innerText = scoreValue.left + ' : ' + scoreValue.right;\n\nconst balls = [['div', '#214BF2'],\n  ['p', '#E58F1F'],\n  ['b', '#EBFB10'],\n  ['a', '#E23FB7'],\n  ['i', '#75E23F'],\n  ['span', '#1CECBB']];\n\nconst minX = gateW;\nconst maxX = fieldW - gateW - ballW;\nconst minY = 0;\nconst maxY = fieldH - ballW;\n\nballs.forEach(el => {\n  const element = document.createElement(el[0]);\n\n  element.classList.add('ball', 'field__ball');\n  element.innerText = el[0].toUpperCase();\n  field.append(element);\n  element.style.position = 'absolute';\n  element.style.backgroundColor = el[1];\n\n  const newX = randomInteger(minX, maxX);\n  const newY = randomInteger(minY, maxY);\n\n  element.style.top = newY + 'px';\n  element.style.left = newX + 'px';\n});\n\nconst ballList = document.querySelectorAll('.field__ball');\n\nballList.forEach(ball => {\n  ball.onmousedown = function(event) {\n    if (event.target.classList.contains('ball--dropped')) {\n      return;\n    };\n\n    const { top, left } = getCoords(field);\n\n    const shiftX = event.clientX - ball.getBoundingClientRect().left;\n    const shiftY = event.clientY - ball.getBoundingClientRect().top;\n\n    function moveAt(pageX, pageY) {\n      ball.style.left = pageX - left - shiftX + 'px';\n      ball.style.top = pageY - top - shiftY + 'px';\n\n      if (ball.getBoundingClientRect().left < left) {\n        ball.style.left = 0 + 'px';\n      };\n\n      if (ball.getBoundingClientRect().top < top) {\n        ball.style.top = 0 + 'px';\n      };\n\n      if (ball.getBoundingClientRect()\n        .left > left + fieldW - ball.offsetWidth) {\n        ball.style.left = fieldW - ball.offsetWidth + 'px';\n      };\n\n      if (ball.getBoundingClientRect().top > top + fieldH - ball.offsetHeight) {\n        ball.style.top = fieldH - ball.offsetHeight + 'px';\n      };\n    };\n\n    moveAt(event.pageX, event.pageY);\n\n    function onMouseMove(e) {\n      moveAt(e.pageX, e.pageY);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n\n    document.onmouseup = function() {\n      if (ball.getBoundingClientRect().left <= left + gateW - ball.offsetWidth\n        && ball.getBoundingClientRect().top >= top + gateW - ballW / 2\n        && ball.getBoundingClientRect()\n          .top <= top + gateW - ballW / 2 + gateH - ball.offsetHeight) {\n        ball.classList.add('ball--dropped');\n        goal('left');\n        addGoalToTheList('left');\n      }\n\n      if (ball.getBoundingClientRect().left >= left + fieldW - gateW\n      && ball.getBoundingClientRect().top >= top + gateW - ballW / 2\n      && ball.getBoundingClientRect()\n        .top <= top + gateW - ballW / 2 + gateH - ball.offsetHeight) {\n        ball.classList.add('ball--dropped');\n        goal('right');\n        addGoalToTheList('right');\n      }\n\n      document.removeEventListener('mousemove', onMouseMove);\n      document.onmouseup = null;\n    };\n  };\n\n  ball.ondragstart = function() {\n    return false;\n  };\n\n  function goal(side) {\n    scoreValue[side]++;\n    score.innerText = scoreValue.left + ' : ' + scoreValue.right;\n  }\n\n  function addGoalToTheList(side) {\n    const newElement = ball.cloneNode(true);\n\n    newElement.style.position = 'static';\n\n    const listItem = document.createElement('li');\n\n    listItem.classList.add('info__item');\n    listItem.append(newElement);\n\n    switch (side) {\n      case 'left':\n        leftGoalsList.append(listItem);\n        break;\n      case 'right':\n        rightGoalsList.append(listItem);\n        break;\n      default:\n        break;\n    }\n  }\n});\n\ndisableSelection(document.body);\n"]}